name: Qwik CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
    build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - name: Setup Node.js
          uses: actions/setup-node@v1
          with:
            node-version: 16.x
            registry-url: https://registry.npmjs.org/

        - name: Checkout
          uses: actions/checkout@v2

        - name: Cache Dependencies
          uses: actions/cache@v2
          with:
            path: node_modules
            key: npm-cache-${{ hashFiles('yarn.lock') }}
            restore-keys: npm-cache-

        - name: Install Dependencies
          run: yarn install --ignore-scripts --frozen-lockfile --ignore-engines

        - name: Build
          run: yarn build.prod

        - name: Upload Build Artifacts
          uses: actions/upload-artifact@master
          with:
            name: dist-builder-io-qwik
            path: dist-dev/@builder.io-qwik
            if-no-files-found: error

  lint:
    name: Lint
    if: ${{ github.event_name != 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: npm-cache-

      - name: Install Dependencies
        run: yarn install --ignore-scripts --frozen-lockfile --ignore-engines

      - name: Prettier Check
        run: yarn prettier-check

      - name: Lint Check
        run: yarn lint

  # unit-tests:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 10.x
  #         registry-url: https://registry.npmjs.org/

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cache Dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-${{ hashFiles('yarn.lock') }}
  #         restore-keys: npm-cache-

  #     - name: Install Dependencies
  #       run: yarn install --ignore-scripts --frozen-lockfile --ignore-engines

  #     - name: Unit Tests
  #       run: |
  #         yarn build
  #         yarn test.unit

  # e2e-tests:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest

  #   timeout-minutes: 15

  #   steps:
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 10.x
  #         registry-url: https://registry.npmjs.org/

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: E2E Tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         install-command: yarn --frozen-lockfile --ignore-engines
  #         start: yarn integration.server.prod
  #         wait-on: 'http://localhost:8081'
  #         wait-on-timeout: 120
  #         browser: chrome
  #         record: true
  #         group: 'Qwik E2E Test Group'
  #         spec: cypress/integration/*
  #         config-file: cypress/cypress.json
  #         config: defaultCommandTimeout=10000
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Upload Videos Artifacts
  #       uses: actions/upload-artifact@v1
  #       if: always()
  #       with:
  #         name: Cypress Videos
  #         path: cypress/videos

  release:
    name: Dry-run Release
    if: ${{ github.event_name != 'release' }}
    runs-on: ubuntu-latest
    needs:
     - build
     - unit-tests
     - e2e-tests

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Display Build Output
        run: ls -R

      - name: Pack @builder.io/qwik
        run: |
          cd dist-builder-io-qwik
          mv `npm pack` ../builder.io-qwik.tgz

      - name: Upload Qwik Package
        uses: actions/upload-artifact@master
        with:
          name: Qwik Package
          path: builder.io-qwik.tgz

  release:
    name: Production Release
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs:
     - build
     - unit-tests
     - e2e-tests

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Display Build Output
        run: ls -R

      - name: Pack @builder.io/qwik
        run: |
          cd dist-builder-io-qwik
          mv `npm pack` ../builder.io-qwik.tgz

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@master
        with:
          name: Qwik Package
          path: builder.io-qwik.tgz
