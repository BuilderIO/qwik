---
source: src/test.rs
expression: output

---
==INPUT==


const Header = qHook((decl1, {decl2}, [decl3]) => {
    const {decl4, key: decl5} = this;
    let [decl6, ...decl7] = stuff;
    const decl8 = 1, decl9;
    function decl10(decl11, {decl12}, [decl13]) {}
    class decl14 {
        method(decl15, {decl16}, [decl17]) {}
    }
    try{}catch(decl18){}
    try{}catch({decl19}){}
});
    
=============================: test.tsx==

const Header = qHook("h_test.tsx.js#Header_h");

=============================: h_test.tsx.js==

export const Header_h = qHook((decl1, { decl2  }, [decl3])=>{
    const { decl4 , key: decl5  } = this;
    let [decl6, ...decl7] = stuff;
    const decl8 = 1, decl9;
    function decl10(decl11, { decl12  }, [decl13]) {
    }
    class decl14 {
        method(decl15, { decl16  }, [decl17]) {
        }
    }
    try {
    } catch (decl18) {
    }
    try {
    } catch ({ decl19  }) {
    }
});

== HOOKS ==

[
  {
    "name": "Header_h",
    "local_decl": [
      "decl2",
      "decl3",
      "decl1"
    ],
    "local_idents": [
      "qHook"
    ]
  }
]

== DIAGNOSTICS ==

None
