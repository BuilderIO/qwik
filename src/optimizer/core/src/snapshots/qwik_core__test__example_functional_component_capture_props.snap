---
source: src/optimizer/core/src/test.rs
expression: output

---
==INPUT==


import { qHook, qComponent, h, onRender } from '@builder.io/qwik';

export const App = qComponent(({count, rest: [I2, {I3, v1: [I4], I5=v2, ...I6}, I7=v3, ...I8]}) => {
    const state = useState({count: 0});
    return onRender(() => {
        return (
            <div on:click={() => state.count += count + total }>
                {I2}{I3}{I4}{I5}{I6}{I7}{I8}
                {v1}{v2}{v3}
            </div>
        )
    });
})
    
============================= test.js ==

import * as __qwik__ from "@builder.io/qwik";
import { qComponent } from '@builder.io/qwik';
export const App = /*#__PURE__*/ qComponent(__qwik__.qrl(()=>import("./h_test_app_init")
, "App_init"));

============================= h_test_app_onrender_div_onclick.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
export const App_onRender_div_onclick = ()=>{
    const [_arg0, state] = __qwik__.useLexicalScope();
    let { count , rest: [I2, { I3 , v1: [I4] , I5 =v2 , ...I6 }, I7 = v3, ...I8]  } = _arg0;
    return state.count += count + total;
};

============================= h_test_app_onrender.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
export const App_onRender = ()=>{
    const [_arg0, state] = __qwik__.useLexicalScope();
    let { count , rest: [I2, { I3 , v1: [I4] , I5 =v2 , ...I6 }, I7 = v3, ...I8]  } = _arg0;
    return(/*#__PURE__*/ h("div", {
        "on:click": __qwik__.qrl(()=>import("./h_test_app_onrender_div_onclick")
        , "App_onRender_div_onclick", [
            _arg0,
            state
        ])
    }, I2, I3, I4, I5, I6, I7, I8, v1, v2, v3));
};

============================= h_test_app_init.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
import { onRender } from "@builder.io/qwik";
export const App_init = (_arg0)=>{
    let { count , rest: [I2, { I3 , v1: [I4] , I5 =v2 , ...I6 }, I7 = v3, ...I8]  } = _arg0;
    const state = useState({
        count: 0
    });
    return onRender(__qwik__.qrl(()=>import("./h_test_app_onrender")
    , "App_onRender", [
        _arg0,
        state
    ]));
};

== HOOKS ==

[
  {
    "origin": "test.tsx",
    "name": "App_onRender_div_onclick",
    "entry": null,
    "canonicalFilename": "h_test_app_onrender_div_onclick"
  },
  {
    "origin": "test.tsx",
    "name": "App_onRender",
    "entry": null,
    "canonicalFilename": "h_test_app_onrender"
  },
  {
    "origin": "test.tsx",
    "name": "App_init",
    "entry": null,
    "canonicalFilename": "h_test_app_init"
  }
]

== DIAGNOSTICS ==

[]
