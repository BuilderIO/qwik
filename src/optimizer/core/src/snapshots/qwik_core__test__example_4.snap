---
source: src/test.rs
expression: output

---
==INPUT==


export function App() {
    const Header = qComponent({
        "onMount": qHook(() => { console.log("mount") }),
        onRender: qHook(() => {
            return (
            <div onClick={qHook((ctx) => console.log(ctx))}/>
            );
        })
    });
    return Header;
}
    
============================= test.js==

export function App() {
    const Header = qComponent({
        "onMount": qHook("h_test_App_Header_onMount.js#App_Header_onMount"),
        onRender: qHook("h_test_App_Header_onRender.js#App_Header_onRender")
    });
    return Header;
}

============================= h_test_App_Header_onMount.js==

export const App_Header_onMount = qHook(()=>{
    console.log("mount");
});

============================= h_test_App_Header_onRender_div_onClick.js==

export const App_Header_onRender_div_onClick = qHook((ctx)=>console.log(ctx)
);

============================= h_test_App_Header_onRender.js==

export const App_Header_onRender = qHook(()=>{
    return (<div onClick={qHook("h_test_App_Header_onRender_div_onClick.js#App_Header_onRender_div_onClick")}/>);
});

== HOOKS ==

[
  {
    "path": "h_test_App_Header_onMount.js",
    "name": "App_Header_onMount",
    "local_decl": [],
    "local_idents": [
      "console",
      "log",
      "qHook"
    ]
  },
  {
    "path": "h_test_App_Header_onRender_div_onClick.js",
    "name": "App_Header_onRender_div_onClick",
    "local_decl": [
      "ctx"
    ],
    "local_idents": [
      "console",
      "ctx",
      "log",
      "qHook"
    ]
  },
  {
    "path": "h_test_App_Header_onRender.js",
    "name": "App_Header_onRender",
    "local_decl": [
      "ctx"
    ],
    "local_idents": [
      "console",
      "ctx",
      "div",
      "log",
      "onClick",
      "qHook"
    ]
  }
]

== DIAGNOSTICS ==

[]
