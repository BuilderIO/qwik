---
source: src/optimizer/core/src/test.rs
expression: output

---
==INPUT==


export const useCounter = () => {
    return useState({count: 0});
}

export const STEP = 1;

export const App = qComponent(() => {
    const state = useCounter();
    const thing = useState({thing: 0});
    const STEP_2 = 2;

    return onRender(() => {
        const count2 = state.count * 2;
        return (
            <div on:click={() => state.count+=count2 }>
                <span>{state.count}</span>
                {buttons.map(btn => (
                    <button
                        on:click={() => state.count += btn.offset + thing + STEP + STEP_2}
                    >
                        {btn.name}
                    </button>
                ))}

            </div>

        )
    });
    })
    
============================= test.js ==

import * as __qwik__ from "@builder.io/qwik";
export const useCounter = ()=>{
    return useState({
        count: 0
    });
};
export const STEP = 1;
export const App = /*#__PURE__*/ qComponent(__qwik__.qrl(()=>import("./h_test_app_init")
, "App_init"));

============================= h_test_app_onrender_div_onclick.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
export const App_onRender_div_onclick = ()=>{
    const [count2, state] = __qwik__.useLexicalScope();
    return state.count += count2;
};

============================= h_test_app_onrender_button_onclick.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
import { STEP } from "./test";
export const App_onRender_button_onclick = ()=>{
    const [STEP_2, btn, state, thing] = __qwik__.useLexicalScope();
    return state.count += btn.offset + thing + STEP + STEP_2;
};

============================= h_test_app_onrender.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
export const App_onRender = ()=>{
    const [STEP_2, state, thing] = __qwik__.useLexicalScope();
    const count2 = state.count * 2;
    return(/*#__PURE__*/ h("div", {
        "on:click": __qwik__.qrl(()=>import("./h_test_app_onrender_div_onclick")
        , "App_onRender_div_onclick", [
            count2,
            state
        ])
    }, /*#__PURE__*/ h("span", null, state.count), buttons.map((btn)=>/*#__PURE__*/ h("button", {
            "on:click": __qwik__.qrl(()=>import("./h_test_app_onrender_button_onclick")
            , "App_onRender_button_onclick", [
                STEP_2,
                btn,
                state,
                thing
            ])
        }, btn.name)
    )));
};

============================= h_test_app_init.js (ENTRY POINT)==

import * as __qwik__ from "@builder.io/qwik";
import { useCounter } from "./test";
export const App_init = ()=>{
    const state = useCounter();
    const thing = useState({
        thing: 0
    });
    const STEP_2 = 2;
    return onRender(__qwik__.qrl(()=>import("./h_test_app_onrender")
    , "App_onRender", [
        STEP_2,
        state,
        thing
    ]));
};

== HOOKS ==

[
  {
    "origin": "test.tsx",
    "name": "App_onRender_div_onclick",
    "entry": null,
    "canonicalFilename": "h_test_app_onrender_div_onclick"
  },
  {
    "origin": "test.tsx",
    "name": "App_onRender_button_onclick",
    "entry": null,
    "canonicalFilename": "h_test_app_onrender_button_onclick"
  },
  {
    "origin": "test.tsx",
    "name": "App_onRender",
    "entry": null,
    "canonicalFilename": "h_test_app_onrender"
  },
  {
    "origin": "test.tsx",
    "name": "App_init",
    "entry": null,
    "canonicalFilename": "h_test_app_init"
  }
]

== DIAGNOSTICS ==

[]
